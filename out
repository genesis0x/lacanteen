import express from 'express';
import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();
const app = express();
app.use(express.json());

// Endpoint to update student photo by externalCode
app.put('/api/students/:externalCode/photo', async (req, res) => {
  const { externalCode } = req.params;
  const { photoUrl } = req.body;
  const token = req.headers['authorization']?.split(' ')[1]; // Extract token from headers

  // Check if the token is valid (this part depends on your authentication logic)
  if (!token) {
    return res.status(401).json({ error: 'Unauthorized' });
  }

  try {
    // Find the student by externalCode
    const student = await prisma.student.findUnique({
      where: { externalCode },
    });

    if (!student) {
      return res.status(404).json({ error: 'Student not found' });
    }

    // Update the student's photo
    const updatedStudent = await prisma.student.update({
      where: { externalCode },
      data: { photo: photoUrl },
    });

    // Respond with the updated student data
    return res.json(updatedStudent);
  } catch (error) {
    console.error('Error updating student photo:', error);
    return res.status(500).json({ error: 'Failed to update student photo' });
  }
});

// Start the server
const port = process.env.PORT || 3000;
app.listen(port, () => {
  console.log(`Server running on port ${port}`);
});
